name: CPP Linter
on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths: [ '**.c', '**.cpp', '**.h', '**.hpp', '**.cxx', '**.hxx', '**.cc', '**.hh', '**CMakeLists.txt', '**.cmake' ]

jobs:
  cpp-linter:
    runs-on: windows-latest
    timeout-minutes: 20

    permissions:
      contents: read
      pull-requests: write

    env:
      OPTION_ARGS: -DWARNINGS_AS_ERRORS=ON
      PRESET_PREFIX: ${{ matrix.platform == 'windows-latest' && 'x64' }}
      PRESET_SUFFIX: 'Debug'

    steps:
      # Check out project

      - name: Checkout Project
        uses: actions/checkout@v4

      # Install all dependencies

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Setup Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      # Configure, Build and Test

      - name: Configure Project
        run: cmake --preset ${{ env.PRESET_PREFIX }}-${{ env.PRESET_SUFFIX }} ${{ env.OPTION_ARGS }}

      - name: Build Project
        run: cmake --build build/${{ env.PRESET_PREFIX }}-${{ env.PRESET_SUFFIX }}

      # Run linter

      - name: CPP Linter
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: 18
          files-changed-only: true
          verbosity: 'debug'
          style: 'file'
          ignore: 'external | build'
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
          tidy-checks:
            bugprone-*,
            performance-*,
            readability-*,
            portability-*,
            modernize-*,
            clang-analyzer-*,
            cppcoreguidelines-*,
            
            -modernize-use-trailing-return-type
